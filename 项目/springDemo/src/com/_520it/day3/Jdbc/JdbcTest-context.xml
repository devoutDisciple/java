<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd">
	
	<!-- 导入配置文件 -->
	<context:property-placeholder location="classpath:db.properties"/>
	
	<!-- 配置连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<!-- 配置datasource可以写成这样，也可以写成配置文件的形式 <property name="driverClassName" value="com.mysql.jdbc.Driver" 
			/> <property name="url" value="jdbc:mysql:///spring" /> <property name="username" 
			value="root" /> <property name="password" value="admin" /> -->
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- 使用spring的jdbc需要在spring中配置一个dataSource，完成DAO的时候，dao中需要一个jdbcTemplate对象，不需要setJdbcTemplate，而是使用setDataSource；用传入的dataSource去new 
		JdbcTemplate(dataSource) 使用jdbcTemplate上的方法来完成JDBC代码 ResultSetExtractor需要手动便利结果集 
		RowMapper：spring帮我们遍历结果集，我们只需要在这个对象中映射每一行数据 -->
	<bean id="employeeDAO" class="com._520it.day3.Jdbc.EmployeeDAOImpl">
		<property name="dataSource" ref="dataSource" />











	</bean>


</beans>